<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <help_text>// Uncomment the following line to change the fontsize and font:
// fontsize=14
//fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>7</zoom_level>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1617</x>
      <y>455</y>
      <w>42</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
m1= 0 ... n</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1491</x>
      <y>245</y>
      <w>273</w>
      <h>217</h>
    </coordinates>
    <panel_attributes>Simulation
Package::main
Classe qui gère le déroulement de la 
simulation
--
-mode: int
-robot: Robot
-env: Environnement
--
+Simulation()
+Simulation(mode: int, robot: Robot)
+getMode() : int
+setMode(mode: int) : void
+getRobot() : Robot
+setRobot(robot : Robot) : void
+getEnv() : Environnement
+setEnv(env: Environnement) : void
+modeSelection(): boolean
+animate(): void
+paint(g : Graphique) : void
fg=black
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1246</x>
      <y>427</y>
      <w>259</w>
      <h>336</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1
</panel_attributes>
    <additional_attributes>10.0;460.0;10.0;10.0;350.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>847</x>
      <y>749</y>
      <w>434</w>
      <h>357</h>
    </coordinates>
    <panel_attributes>/Robot/
Package::robot
--
-roues: ArrayList&lt;Roue&gt;
-capteurs: &lt;ArrayList(Capteur)&gt;
-prev_pos: Posture
-comp: Comportement
--
+Robot()
+Robot(comp:Comportement)
+Robot(r1: Roue, r2: Roue, capteurs: &lt;ArrayList(Capteur)&gt;, pos: Posture, comp: Comportement): void
+getRoues(): ArrayList&lt;Roue&gt;
+setRoues(roues: ArrayList&lt;Roue&gt;):void
+addRoues(oue : Roue): void
+getCapteurs(capteur : Capteur) : int
+getCapteurs(ind: int) : int
+setCapteurs(capteurs: ArrayList&lt;Capteur&gt;): void
+setComp(comp : Comportement) : void
+getComp() : Comportement
+setPos(pos: Posture): void
+setPrev_pos(post : Posture) : void
+getPrev_pos() : Posture
+getComp(): Comportement
+setComp(comp: Comportement): void
+getRepCapteur(elem : ArrayList&lt;Element&gt;) : int[]
+addCapteur(capteur : Capteur) : void
+removeCapteur(capteur : Capteur) : void
+description(): String
+toString() : String
/+move(p : Posture) : void/
/+calculerPosition(elem : ArrayList&lt;Element&gt;) : Posture/
/+paint(g : Graphic) : void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>693</x>
      <y>546</y>
      <w>497</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>Roomba
Package::robot
--
+Roomba()
+Romba(comp: Comportement)
-init(): void
+move(p : Posture) : void
+blocage(): boolean;
+calculerPosition(elem : ArrayList&lt;Element&gt;) : Posture
+nettoyerTache(elem : ArrayList&lt;Element&gt;, ind : int) : void
+description();
+toString() : String
+paint(g : Graphic) : void
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>945</x>
      <y>686</y>
      <w>21</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>602</x>
      <y>784</y>
      <w>175</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Roue
Package::robot
--
-distance : double
--
+Roue()
+getDistance() : double
+setDistance(distance : double) : void

bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>875</x>
      <y>1148</y>
      <w>189</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>/Capteur/
Package::robot
--
-pos : Posture
-portee: double
-type: String
--
+Capteur()
+Capteur(pos : Posture, portee: double)
+getPos() : Posture
+setPos(pos : Posture) : void
+getPortee(): double
+setPortee(portee: double): void
+getType(): String
+setType(type: String): void
+toString() : String
/+detecter(elem : ArrayList &lt;Element&gt;) : int/
/+type() : String/
/+paint(g : Graphic) : void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>770</x>
      <y>945</y>
      <w>91</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1= 0...n 
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>490</x>
      <y>1442</y>
      <w>252</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>Capteur_prox
Package::robot
Portee = 0,5
--
+Capteur_prox()
+Capteur_prox(pos : Posture)
+detecter(elem : ArrayList&lt;Element&gt;) : int
+type() : String
+toString() : String
+paint(g : Graphic) : void
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>777</x>
      <y>1442</y>
      <w>245</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>Capteur_salete
Package::robot
Portee=5
--
+Capteur_salete()
+Capteur_salete(pos: Posture, portee: double)
+detecter(elem : ArrayList&lt;Element&gt;) : int
+type() : String
+toString() : String
+paint(g : Graphic) : void
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1050</x>
      <y>1442</y>
      <w>245</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>Telemetre_laser
Package::robot
Portee&gt;0,5
--
+Telemetre_laser()
+Telemetre_laser(pos: Posture, portee: double)
+detecter(elem : ArrayList&lt;Element&gt;) : int[]
+collideC(c : Cercle) : boolean
+type() : String
+toString() : String
+paint(g : Graphic) : void
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1484</x>
      <y>518</y>
      <w>280</w>
      <h>266</h>
    </coordinates>
    <panel_attributes>Environnement
Package::main
--
-largeur: int
-longueur: int
-element: ArrayList&lt;Element&gt;
--
+Environnement()
+Environnement(lar : int, lon : int)
+Environnement(lar : int, lon : int, obj : ArrayList &lt;Objet&gt;, robot : Robot)
+getLargeur(): int
+setLargeur(largeur: int): void 
+getLongueur(): int
+setLongueur(longueur: int): void
+getElement() : ArrayList&lt;Element&gt;
+getElement(ind : int) : Element
+setElement(element: ArrayList&lt;Element&gt;): void
+addElement(elem : Element) : void
+removeElement(ind: int): void
+init() : void
+removeElement(ind : int) : void
+isReachable(robot: Robot, pos : Posture) : boolean
+toString() : String
+paint(g : Graphique) : void
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1645</x>
      <y>777</y>
      <w>42</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1= 0 ...n
m2=1</panel_attributes>
    <additional_attributes>10.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1365</x>
      <y>889</y>
      <w>413</w>
      <h>217</h>
    </coordinates>
    <panel_attributes>/Element/
Package::element
Classe abstraite representant un 
element present dans la simulation
--
#pos: Posture
-forme: Forme
--
+Element()
+Element(forme: forme)
+Element(pos: Posture, forme:Forme)
+getPos() : Posture
+getForme() : Forme
+setPos(pos: Posture): void
+setPos(x: double, y: double): void
+setForme(forme: Forme): void
+isCleanable() : boolean
+isColliding(robot : Robot, pos : Posture) : boolean
/+toString() : String/
+paint(g : Graphique) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1932</x>
      <y>504</y>
      <w>378</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>/Forme/
Package::forme
Classe abstraite représentant les 
différentes formes des éléments
--
+Forme();
/+isColliding(robot : Roomba, pos_robot : Posture, pos_elem : Posture) : boolean/
/+collide(cpt : Capteur, pos_elem: Posture) : boolean/
/+getHomogeneousSize() : int/
/+toString() : String/
/+paint(g : Graphique) : void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1771</x>
      <y>532</y>
      <w>175</w>
      <h>448</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2= 0....n</panel_attributes>
    <additional_attributes>10.0;610.0;50.0;610.0;50.0;10.0;230.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2408</x>
      <y>252</y>
      <w>378</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>Cercle
Package::forme
--
-diametre : int
--
+Cercle()
+Cercle(diametre: int)
+getDiametre() : int
+setDiametre(d : int) : void
+isColliding(robot : Roomba, pos_robot : Posture, pos_element : Posture) : boolean
+isCollidingC(diam : double, pos_cercle : Posture, pos_elem : Posture): boolean
+collide(cpt : Capteur, pos_elem : Posture) : boolean
+getHomogeneousSize() : int
+toString() : String
+paint(g : Graphic) : void
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2408</x>
      <y>644</y>
      <w>378</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>Polygone
Package::forme
--
-taille_cotes: ArrayList&lt;Integer&gt; 
--
+Polygone(taille_cotes: ArrayList&lt;Integer&gt;)
+getTaille_cotes() : ArrayList&lt;Integer&gt;
+setTaille_cotes(ArrayList&lt;Integer&gt;): void
+getTaille_cotes(ind : int) : int
+isColliding(robot : Roomba, pos_robot : Posture, pos_element : Posture) : boolean
+collide(cpt : Capteur_prox, pos_elem : Posture) : boolean
+getHomogeneousSize() : int
+toString() : String
+paint(g : Graphic) : void
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2408</x>
      <y>441</y>
      <w>378</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>Rectangle
Package::forme
--
-longueur : int
-largeur : int
--
+Rectangle()
+Rectangle(lon : int, lar : int)
+getLongueur() : int
+getLargeur() : int
+setLongueur(lon : int): void
+setLargeur(lar : int): void
+isColliding(robot : Roomba, pos_robot : Posture, pos_element : Posture) : boolean
+collide(cpt : Capteur, pos_elem : Posture) : boolean
+getHomogeneousSize() : int
+toString() : String
+paint(g : Graphic) : void
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2303</x>
      <y>357</y>
      <w>119</w>
      <h>196</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;260.0;80.0;260.0;80.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2303</x>
      <y>567</y>
      <w>119</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2303</x>
      <y>602</y>
      <w>119</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;170.0;150.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1715</x>
      <y>1190</y>
      <w>147</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>Tache
Package::element
{Forme circulaire}
--
+Tache(pos: Posture, diam: int)
+isCleanable() : boolean
+toString() : String
+paint(g: Graphique) : void
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1673</x>
      <y>1099</y>
      <w>133</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;170.0;40.0;170.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1540</x>
      <y>1190</y>
      <w>168</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>Mur
Package::element
{Forme Rectangulaire}
--
+Mur(pos: Posture, lar: int, lon: int)
+getLargeur(): int
+getLongueur(): int
+isCleanable() : boolean
+toString() : String
+paint(g: Graphique) : void
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1624</x>
      <y>1099</y>
      <w>21</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1351</x>
      <y>1190</y>
      <w>182</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>Obstacle
Package::element
{Forme circulaire}
--
+Obstacle(pos: Posture, diametre: int)
+getDiametre(): int
+isCleanable() : boolean
+toString() : String
+paint(g: Graphique) : void
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1449</x>
      <y>1099</y>
      <w>126</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;10.0;160.0;40.0;10.0;40.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>448</x>
      <y>917</y>
      <w>329</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>/Comportement/
Package::robot
--
#flag: int
#sens: int
--
+Comportement()
+getFlag(): int
+setFlag(flag: int): void
+getSens(): int
+setSens(sens: int): void
/+chemin(capteurs: ArrayList&lt;Capteur&gt;, capteursAns: int[]): Consigne/
/+generique(capteur : ArrayList&lt;Capteur&gt;, capteursAns : int[]) : Consigne/
/+toString() : String/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>49</x>
      <y>1036</y>
      <w>336</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Suivi_mur
Package::robot
--
+Suivi_mur()
+generique(capteurs : ArrayList&lt;Capteur&gt;, repCapteurs : int[]) : Consigne
+toString() : String
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>49</x>
      <y>805</y>
      <w>336</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Comp_alea
Package::robot
--
+Comp_alea()
+generique(capteurs : ArrayList&lt;Capteur&gt;, repCapteurs : int[]) : Consigne
+toString() : String
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>49</x>
      <y>917</y>
      <w>336</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Suivi_chemin
Package::robot
--
+Suivi_chemin()
+generique(capteurs : ArrayList&lt;Capteur&gt;, repCapteurs : int[]) : Consigne
+toString() : String
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1904</x>
      <y>903</y>
      <w>266</w>
      <h>217</h>
    </coordinates>
    <panel_attributes>Posture
Package::element
--
-x: double
-y : double
-theta : double
--
+Posture(x : double, y : double, theta : double)
+getX() : double
+getY() : double
+getTheta() : double
+setX(xx : double) : void
+setY(yy : double) : void
+setTheta(thetat : double) : void
+rotate(alpha : double) : Posture
+move(d_l : double, d_r : double, dist : double) : Posture
+toString() : String
+normalize_angle ( a : double) : double

bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>378</x>
      <y>840</y>
      <w>84</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;150.0;60.0;150.0;60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>378</x>
      <y>952</y>
      <w>84</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>378</x>
      <y>966</y>
      <w>84</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;10.0;60.0;10.0;60.0;170.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>959</x>
      <y>1099</y>
      <w>35</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2= 0...n</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>616</x>
      <y>1351</y>
      <w>308</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>420.0;10.0;420.0;80.0;10.0;80.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>966</x>
      <y>1351</y>
      <w>21</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1008</x>
      <y>1351</y>
      <w>175</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0;230.0;80.0;230.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1274</x>
      <y>973</y>
      <w>105</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1890</x>
      <y>224</y>
      <w>910</w>
      <h>623</h>
    </coordinates>
    <panel_attributes>forme</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1463</x>
      <y>210</y>
      <w>322</w>
      <h>609</h>
    </coordinates>
    <panel_attributes>main</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1337</x>
      <y>847</y>
      <w>868</w>
      <h>469</h>
    </coordinates>
    <panel_attributes>element</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>0</x>
      <y>511</y>
      <w>1309</w>
      <h>1099</h>
    </coordinates>
    <panel_attributes>robot</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1771</x>
      <y>1008</y>
      <w>147</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=0...n</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>770</x>
      <y>833</y>
      <w>91</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2= 0...n</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1239</x>
      <y>28</y>
      <w>154</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>/Graphique/
Package::graphique
--
/+draw(elem: Element):void/
/+draw(robot: Roomba):void/
/+draw(cap: Capteur_salete):void/
/+draw(cap: Capteur_prox):void/
/+draw(tache: Tache):void/
/+draw(cap: Telemetre):void/
/+draw(c: Cercle):void/
/+draw(rec: Rectangle):void/
/+draw(rec: Polygone):void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1232</x>
      <y>210</y>
      <w>182</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>Graph2D
Package::graphique
--
- g2: Graphics2D
- sim: Simulation
--
+Graph2D(sim: Simulation)
+paint(g: Graphique): void
+draw(elem: Element):void
+draw(robot: Roomba):void
+draw(cap: Capteur_salete):void
+draw(cap: Capteur_prox):void
+draw(tache: Tache):void
+draw(cap: Telemetre):void
+draw(c: Cercle, pos: Posture):void
+draw(r: Rectangle, pos: Posture):void
+draw(pol: Polygone, pos: Posture):void
bg=cyan</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1316</x>
      <y>168</y>
      <w>21</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1197</x>
      <y>0</y>
      <w>245</w>
      <h>406</h>
    </coordinates>
    <panel_attributes>graphique</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1407</x>
      <y>308</y>
      <w>98</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
m1=1</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>490</x>
      <y>1155</y>
      <w>245</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>Consigne
Package::robot
--
-consignes: ArrayList&lt;Double&gt;
--
+Consigne()
+Consigne(cons: ArrayList&lt;Double&gt;)
+Consigne(x: double, y: double)
+getConsignes(): ArrayList&lt;Double&gt;
+getConsignes(ind: int): double
+setConsignes(consignes: ArrayList&lt;Double&gt;): void
+addConsigne(cons: double): void
+removeConsigne(cons: double): void
+size(): int

bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
